# =============================================================================
# CONFIGURAÇÕES DE AMBIENTE - SISTEMA DE LOCADORA
# =============================================================================
# 
# Este arquivo contém exemplos das variáveis de ambiente necessárias para
# executar a aplicação. Copie este arquivo para .env e configure os valores
# reais para seu ambiente.
#
# IMPORTANTE: Nunca commite o arquivo .env com dados reais!
#
# Para usar:
# 1. cp .env.example .env
# 2. Edite o arquivo .env com os valores reais
# 3. Execute: docker-compose up --build
#

# =============================================================================
# CONFIGURAÇÕES DO BANCO DE DADOS
# =============================================================================

# Nome do banco de dados
POSTGRES_DB=locadora

# Usuário do banco de dados
POSTGRES_USER=locadora_user

# Senha do banco de dados (ALTERE ESTA SENHA!)
POSTGRES_PASSWORD=sua_senha_super_secreta_aqui

# Host do banco (para docker-compose use 'postgres', para local use 'localhost')
DB_HOST=postgres

# Porta do banco de dados
DB_PORT=5432

# =============================================================================
# CONFIGURAÇÕES DA APLICAÇÃO
# =============================================================================

# Perfil ativo do Spring (development, production, test)
SPRING_PROFILES_ACTIVE=docker

# Porta da aplicação
SERVER_PORT=8080

# Nível de log da aplicação
LOGGING_LEVEL_COM_LOCADORA=INFO

# Nível de log do Spring Framework
LOGGING_LEVEL_ORG_SPRINGFRAMEWORK=WARN

# =============================================================================
# CONFIGURAÇÕES DO PGADMIN (OPCIONAL)
# =============================================================================

# Email para login no PgAdmin
PGADMIN_DEFAULT_EMAIL=admin@locadora.com

# Senha para login no PgAdmin (ALTERE ESTA SENHA!)
PGADMIN_DEFAULT_PASSWORD=sua_senha_pgadmin_aqui

# =============================================================================
# CONFIGURAÇÕES DE SEGURANÇA (PRODUÇÃO)
# =============================================================================

# JWT Secret (para futuras implementações de autenticação)
# JWT_SECRET=sua_chave_jwt_super_secreta_com_pelo_menos_256_bits

# Chave de criptografia para dados sensíveis
# ENCRYPTION_KEY=sua_chave_de_criptografia_aqui

# =============================================================================
# CONFIGURAÇÕES DE DESENVOLVIMENTO
# =============================================================================

# Mostrar SQL no console (true/false)
SPRING_JPA_SHOW_SQL=false

# Validar DDL do Hibernate (validate, update, create, create-drop)
SPRING_JPA_HIBERNATE_DDL_AUTO=validate

# =============================================================================
# CONFIGURAÇÕES DE MONITORAMENTO
# =============================================================================

# Endpoints do Actuator expostos
MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health,info,metrics

# =============================================================================
# EXEMPLO DE USO
# =============================================================================
#
# Para desenvolvimento local:
# 1. Copie este arquivo: cp .env.example .env
# 2. Edite as senhas no arquivo .env
# 3. Execute: docker-compose up --build
#
# Para produção:
# 1. Configure as variáveis de ambiente no seu provedor de cloud
# 2. Use senhas fortes e únicas
# 3. Considere usar serviços de gerenciamento de secrets (AWS Secrets Manager, etc.)
#